alias functionNum R1;
alias currentPID R2;
//print "mod 4";
if(functionNum==3) then
	//Acquiring Terminal
	//breakpoint;
	multipush(R1,R2,R3,R4,R5);
	functionNum = 8;
	currentPID = [SYSTEM_STATUS_TABLE+1];
	
	call MOD_0;
	multipop(R1,R2,R3,R4,R5);
	print R3;
	//breakpoint;
	//Releasing terminal
	multipush(R1,R2,R3,R4,R5);
	functionNum = 9;
	currentPID = [SYSTEM_STATUS_TABLE+1];
	call MOD_0;
	R5 = R0;
	multipop(R1,R2,R3,R4,R5);
	//breakpoint;
return;
endif;
if(functionNum==4) then
	
	
	multipush(R1,R2,R3,R4,R5);
	functionNum = 8;
	currentPID = [SYSTEM_STATUS_TABLE+1];
	
	call MOD_0;
	multipop(R1,R2,R3,R4,R5);
//breakpoint;
	read;
	[PROCESS_TABLE + currentPID * 16 + 4]=WAIT_TERMINAL;
	
	
	multipush(R1,R2,R3,R4,R5);
	
	call MOD_5;
	multipop(R1,R2,R3,R4,R5);
[[[PROCESS_TABLE +currentPID * 16 + 14]+2*R3/512]*512+(R3%512)]=[PROCESS_TABLE + currentPID* 16 + 8];

	
	return;



endif;

//disk_load
if(functionNum==2) then 
   multipush(R0,R1,R2,R3,R4,R5,R9);
   R1=3;
   R2=currentPID;
   call MOD_0;
   multipop(R0,R1,R2,R3,R4,R5,R9);
   [DISK_STATUS_TABLE]=1;
   [DISK_STATUS_TABLE+1]=0;
   [DISK_STATUS_TABLE+2]=R3;
   [DISK_STATUS_TABLE+3]=R4;
   [DISK_STATUS_TABLE+4]=currentPID;
   load(R3,R4);
   [PROCESS_TABLE + currentPID*16 +4]=WAIT_DISK;
   multipush(R0,R1,R2,R3,R4,R5,R9);
   call MOD_5;
   multipop(R0,R1,R2,R3,R4,R5,R9);
   return;   
endif;
return;
